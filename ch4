#使用numpy的ndarray建立Series物件
import pandas as pd
import numpy as np

s1 = pd.Series(np.arange(0,7,2))
print(f"{s1}")

#建立函索引的Series物件
myindex = [3,5,7]
price = [100,200,300]
s2 = pd.Series(price,index=myindex)
print(f"{s2}")

s = pd.Series([30,50,60],index=['apple','banana','orange'])
print(f"{s}")
print(f"{s.values}")    #印出Series物件索引
print(f"{s.index}")     #印出Series值

---------------------------------------------------------------------
# 使用Series建立DataFrame
import pandas as pd
years = range(2020,2023)
a = pd.Series([11,12,13],index=years)
b = pd.Series([14,15,16],index=years)
c = pd.Series([17,18,19],index=years)
total = pd.concat([a,b,c],axis=1)   #axis = 1是水平的，預設的axis=0是直的
header = ['a','b','c']              #欄位名稱宣告
total.columns = header              #設定欄位名稱進去DataFrame中
print(type(total))
print(total)

----------------------------------------------------------------------
import pandas as pd
#使用元素是字典的串列建立DataFrame
data = [{'apple':50,'Orange':30,'Grape':80},{'apple':40,'Grape':70}]
fruits = pd.DataFrame(data)
print(fruits)

#使用字典建立DataFrame
cities = {'country':['China','Japan','Singapore'],
          'town':['Beijing','Tokyo','Singapore'],
          'population':[2000,1600,600]}
rowindex = ['first','second','third']           #定義列欄位名稱
citydf = pd.DataFrame(cities,index=rowindex)
print(citydf)

---------------------------------------------------------------------
#使用字典建立DataFrame
cities = {'country':['China','Japan','Singapore'],
          'town':['Beijing','Tokyo','Singapore'],
          'population':[2000,1600,600]}
citydf = pd.DataFrame(cities,columns=['town','population'],index=cities['country']) 
#將字典內某個元素當作index
print(citydf)

print(citydf.at['China','town'])      #取得指定的列、column  (只能單一元素or單一陣列)
print(citydf.iat[2,1])              #iat，i(index)使用編號取得資料，印出第二列第一行 (單一)
print(citydf.loc['Japan'])          #loc取得row是Japan的資料
print(citydf.loc[['Japan','China']])
print(citydf.loc['China':'Japan','town':'population'])    #印出兩個  (列:列,欄位:欄位) 資訊
print(citydf.iloc[0])      #印出第一列資料

# at 單數
#loc 單數雙數都可以

--------------------------------------------------------------------------
import pandas as pd
import numpy as np
df = pd.DataFrame([[1,2,3],[4,np.nan],[7,8,np.nan]])
print(df.isna())   #印出是否為NA值
print(df.notna())  #是否不是NA值
print(df.fillna(3))  #將NA值用3去填補
print(df.dropna(1)) #刪除NA值的行
print(df.dropna(0)) #刪除NA值的列
print(df.cumsum())

cities = {'Population':[2000,3000,4000],
          'country':['US','Taiwan','Japan'],
          'town':['A','B','C']}
f = pd.DataFrame(cities,columns=['Population','country'],index=cities['town'])
print(f['Population'].cumsum())        #印出指定軸累積的總合
print(f['Population'].cummax())        #印出指定軸累積的最大值
print(f['Population'].cummin())        #印出指定軸累積的最小值

--------------------------------------------------------------------------
import pandas as pd
course = ['Chinese','English','Math','Natural','Society']
chinese = [14,12,13,10,13]
math = [10,11,13,12,14]
english = [10,11,11,14,14]
natural = [15.,13,14,15,15]
society = [10,15,15,15,15]

df = pd.DataFrame([chinese,math,english,natural,society],columns=course,index = range(1,6))
total = [df.iloc[i].sum() for i in range(0,5)]
df['Total'] = total               #新增一個欄位
print(df.drop(index=[3]))                          #刪除索引值為3的所有列資料
df = df.sort_values(by='Total',ascending=False)  #排序，上升=False，所以是由大到小排序
rank = range(1,6)
df['Ranking'] = rank
print(df)
#當總分一樣時處理，讓排名也相同
for i in range(1,5):
    if df.iat[i,5] == df.iat[i-1,5]:
        df.iat[i,6] = df.iat[i-1,6]

df = df.sort_index()   #讓index隨便排序
print(df)

ave = df.mean()
df.loc['Average'] = ave           #新增一個新的row，要用loc，名稱會變成索引值
print(df)
print(df.drop(index=["Average"])) #刪除索引值

df.to_csv('ok.csv')                                #將DataFrame寫成csv檔
df.to_csv('okk.csv',header=False,index=False)      #將DataFrame寫成csv檔，但無索引值、無欄位名稱


head = ['a','b','c','d','e']
x = pd.read_csv('ok.csv',index_col=0)     #讀入csv檔，需用index_col來指定第幾欄去作為index值
y = pd.read_csv('okk.csv',names=head)     #讀入csv檔，並用names來設定header欄位的名稱
print(x)
print(y)






